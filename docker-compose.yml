version: '3.8'

services:
  postgres:
    image: postgres:15
    container_name: commercial_license_db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
      POSTGRES_DB: commercial_licenses
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - commercial_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build: .
    container_name: commercial_license_api
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: commercial_licenses
      DB_USER: postgres
      DB_PASSWORD: postgres123
      DATABASE_URL: postgresql://postgres:postgres123@postgres:5432/commercial_licenses
      AZURE_OPENAI_ENDPOINT: ${AZURE_OPENAI_ENDPOINT}
      AZURE_OPENAI_API_KEY: ${AZURE_OPENAI_API_KEY}
      AZURE_OPENAI_DEPLOYMENT_NAME: ${AZURE_OPENAI_DEPLOYMENT_NAME}
      AZURE_OPENAI_API_VERSION: ${AZURE_OPENAI_API_VERSION}
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - commercial_network
    volumes:
      - ./Commercial_Licenses.xlsx:/app/Commercial_Licenses.xlsx:ro

  importer:
    build: .
    container_name: commercial_license_importer
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: commercial_licenses
      DB_USER: postgres
      DB_PASSWORD: postgres123
      DATABASE_URL: postgresql://postgres:postgres123@postgres:5432/commercial_licenses
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - commercial_network
    volumes:
      - ./Commercial_Licenses.xlsx:/app/Commercial_Licenses.xlsx:ro
    command: python import_commercial_data.py
    profiles:
      - import

volumes:
  postgres_data:

networks:
  commercial_network:
    driver: bridge 